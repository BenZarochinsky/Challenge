servers=[
{
  :hostname => "server1",
  :ip => "192.168.60.10",
  :box => "ubuntu/focal64",
  :ram => 512,
  :cpu => 1,
  :provisions => [".bootstrap/bootstrap.sh","fixScripts/exercise1-fix.sh","fixScripts/exercise2-fix.sh","fixScripts/exercise3-fix.sh","fixScripts/exercise5-fix_server1.sh","fixScripts/exercise4-fix_server1.sh"]
},
{
  :hostname => "server2",
  :ip => "192.168.60.11",
  :box => "ubuntu/focal64",
  :ram => 512,
  :cpu => 1,
  :provisions => ["fixScripts/exercise5-fix_server2.sh","fixScripts/exercise4-fix_server2.sh"]
}
]

Vagrant.configure(2) do |config|
  servers.each do |machine|
    config.vm.define machine[:hostname] do |node|
        machine [:provisions].each do |script|
           node.vm.provision :shell, :path => script
        end
      node.vm.box = machine[:box]
      node.vm.hostname = machine[:hostname]
      node.vm.network "private_network", ip: machine[:ip]
      node.vm.provider "virtualbox" do |vb|
        vb.customize [ "modifyvm", :id, "--uartmode1", "file", File::NULL ]
        vb.memory = machine[:ram]
        vb.cpus = machine[:cpu]
      end

      if machine[:hostname] == "server1"
        node.vm.provision "shell", inline: <<-SHELL
          if [ ! -f /home/vagrant/.ssh/id_rsa ]; then
            ssh-keygen -f /home/vagrant/.ssh/id_rsa -N ''
            
            chown -R vagrant:vagrant /home/vagrant/.ssh/
            # Copy the key to a shared folder, so it can be accessed later
            cp /home/vagrant/.ssh/id_rsa.pub /vagrant/server1_id_rsa.pub
          fi
        SHELL
      end

      if machine[:hostname] == "server2"
        node.vm.provision "file", source: "./server1_id_rsa.pub", destination: "/home/vagrant/server1_id_rsa.pub"
        node.vm.provision "shell", inline: <<-SHELL
          cat /home/vagrant/server1_id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
          rm /home/vagrant/server1_id_rsa.pub
        SHELL
      end
    end
  end
end